import db from "../config/db.js";
import { getAuth, requireAuth, clerkClient} from '@clerk/express'

// signup

export const user_signup = async (req, res)=>{
    try{
    const token = req.headers.authorization?.split(" ")[1];
    console.log("Received token:", token); // Check if token is present and valid
    
    const current_User_Id = req.auth.userId;

    const {fullName, dob, gender} = req.body.data;
    if (!fullName.trim() || !dob || !gender)
    {
        return res.status(400).json({ error: "Backend says missing fields!" }); 
    }
    const result = await db.query(
        `INSERT INTO users (user_id, fullname, dob, gender)
        VALUES ($1, $2, $3, $4) RETURNING *`,
        [current_User_Id, fullName, dob, gender]
      );
      
      const user = result.rows[0];
      console.log("this is our user from our database:",user);



    return res.status(200).json({ message: "Authorized" });
    }
    catch(err)
    {
        console.error("Server error during signup",err);
        return res.status(500).json({ error: "Error during signup, Please try again!" });
    }

}

// PERSONALITY 

export const user_personality = async (req, res)=>{
    console.log("route hit personality wala");
    console.log("answers from personality",req.body);

    // user_personality is generated by the ML model for perssonality

    return res.status(200).json({ message: "personality form data submitted" });



    // PERSONALITY ROUTE WILL REMAIN UNTOUCHED UNTIL CLARITY ON PERSONALITY STUFF

    // RESULTING PERSONALITY BASED ON ANSWERS HAS TO BE STORED IN NEW TABLE 
    // WHERE JUST USER ID FROM CLERK AND HIS PERSONALITY WILL BE STORED 
    // FOREIGN KEY USER ID CASCADES

    // sql
    // const user_id = req.auth.userId;
    // const result = await db.query(
    //     `INSERT INTO personality (personality, user_id)
    //     VALUES ($1, $2) RETURNING *`,
    //     [user_personality, user_id]
    //   );
    //   const db_res = result.rows[0];
    //   console.log("current user personality is", db_res.personality);

}

// SIGN-IN

export const user_signin = async (req, res)=>{
    try{
    console.log("route hit LOGIN wala");
    const userIdd = req.auth.userId;
    const user = await clerkClient.users.getUser(userIdd);
    
    console.log("CURRENT USER:",user);
    return res.status(200).json({ message: "Login hogaya!" });
    }
    catch(err)
    {
        console.error("Server error during login",err);
        return res.status(500).json({ error: "Error during login, Please try again!"});
    }
    
}

// ADD POST


export const post_add = async (req, res)=>{
    try{
    console.log("route hit add -post wala");

    const current_userId = req.auth.userId; 
    const user = await clerkClient.users.getUser(current_userId);
    const current_username = user.username; 

    const result = await db.query(
        `SELECT personality FROM personality where user_id=$1`,
        [current_userId]
      );
    
    const user_personality = result.rows[0]?.personality || "";


    // insert user into post data in db
    const result_post_user = await db.query(
        `SELECT * FROM post_users WHERE user_id=$1`,
        [current_userId]                         
      ); 

      // mens if user doesnt already exist in post_users
    if(result_post_user.rowCount===0)
    {
        const result_insert_user = await db.query(
            `INSERT INTO post_users (username, personality, user_id)
            VALUES ($1, $2, $3) RETURNING *`,
            [current_username, user_personality, current_userId]                         
        );
        const post_user_response = result_insert_user.rows[0];
        var post_user_id = post_user_response.id;
        console.log("post user response",post_user_response);
    }
    else
    {
       var post_user_id = result_post_user.rows[0].id;
    }


    //post details: 
    const postdata = req.body;
    console.log("POST DATA IN BACKEND",postdata);

    // insert post details into post data in db
    const result_post_details = await db.query(
        `INSERT INTO post_details (post_user_id, title, location, visit_date, description)
        VALUES ($1, $2, $3, $4, $5) RETURNING *`,
        [post_user_id, postdata.title, postdata.location, postdata.visitDate, postdata.description]
      );

    const post_details_response = result_post_details.rows[0];
    
    // from post details
    const current_post_id = post_details_response.id;
    console.log("post details response",post_details_response);

    // images
    const user_images = req.files.images;

    if(user_images && user_images.length>0){
        console.log("IMAGES ",user_images);
        for(let i=0;i<user_images.length;i++)
        {
            const img_path = user_images[i].path;
            console.log("Path", img_path);
            const result_insert_image = await db.query(
                `INSERT INTO post_images (post_id, image_url)
                VALUES ($1, $2)`,
                [current_post_id, img_path]
            );
        }
    }

    return res.status(200).json({ message: "Post added successfully!" });
    }
    catch(err)
    {
        console.error("Server error during add-post",err);
        return res.status(500).json({ error: "Error during add-post, Please try again!"});
    }
    
}


// GET POSTS
// {
        //   id: 1,
        //   title: "Trip to Gulmarg",
        //   description:
        //     "Join me on a snow adventure this December. Let's make memories!",
        //   name: "Danish Najeeb",
        //   
        //   personality: "ISTJ",
        //   photos: [
        //     "https://images.pexels.com/photos/25786709/pexels-photo-25786709/free-photo-of-view-of-a-road-between-autumnal-trees.jpeg",
        //     "https://images.pexels.com/photos/19147506/pexels-photo-19147506/free-photo-of-auto-rickshaw-on-road-in-autumn.jpeg",
        //   ],
        //   location: "Gulmarg, Kashmir",
        //   date: "December 15 2025",
        // },

export const post_get = async (req, res)=>{
    console.log("WE ARE IN GET POST ROUTE");

    // db query using join to get the data which we want to sent to the home page for rendering
    const db_posts = await db.query(
        `select 
        post_details.id as post_id,
        post_details.title,
        post_details.location,
        TO_CHAR(post_details.visit_date,'YYYY-MM-DD') AS visit_date,
        post_details.description,
        post_users.username,
        post_users.personality,
        ARRAY_AGG(post_images.image_url) as images

        from post_details

        join post_users on post_details.post_user_id=post_users.id
        left join post_images on post_details.id=post_images.post_id

        GROUP BY post_details.id, post_users.id
        ORDER BY post_details.created_at DESC`
      );
    
    const result = db_posts.rows;
    console.log("result from the dattabase tables combined is", result);
    console.log("no of rows",db_posts.rowCount);

    return res.status(200).json({ posts: result }); 
    

}

// GET DETAILS OF POST
